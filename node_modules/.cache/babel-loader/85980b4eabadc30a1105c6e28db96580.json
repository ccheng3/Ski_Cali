{"ast":null,"code":"var _jsxFileName = \"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Paper } from '@mui/material';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Body from './components/Body/Body';\nimport Resorts from './components/Resorts/Resorts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isBodyLoading, setIsBodyLoading] = React.useState(true);\n  const [resorts, setResorts] = React.useState([{\n    query: 'boreal',\n    skimapID: '523'\n  }, {\n    query: 'chinapeak',\n    skimapID: '527'\n  }, {\n    query: 'diamondpeak',\n    skimapID: '359'\n  }, {\n    query: 'heavenly',\n    skimapID: '537'\n  }, {\n    query: 'northstar',\n    skimapID: '531'\n  }, {\n    query: 'kirkwood',\n    skimapID: '544'\n  }, {\n    query: 'homewood',\n    skimapID: '545'\n  }, {\n    query: 'june-mountain',\n    skimapID: '540'\n  }, {\n    query: 'mammoth-lakes',\n    skimapID: '530'\n  }, {\n    query: 'mtrose',\n    skimapID: '358'\n  }, {\n    query: 'palisades',\n    skimapID: '538'\n  }, {\n    query: 'alpine',\n    skimapID: '522'\n  }, {\n    query: 'sierra',\n    skimapID: '525'\n  }, {\n    query: 'sugarbowl',\n    skimapID: '543'\n  }, {\n    query: 'tahoe-donner',\n    skimapID: '529'\n  }]);\n  const [skiMapData, setSkiMapData] = React.useState([]);\n  const corsProxy = 'https://mighty-scrubland-75189.herokuapp.com';\n  resorts.forEach((resort, index) => {\n    fetch(`${corsProxy}/https://liftie.info/api/resort/${resort.query}`).then(response => response.json()).then(data => {\n      resorts[index] = { ...resorts[index],\n        ...data\n      };\n    }).catch(error => {\n      console.log(`Encountered error in Liftie Fetch request: ${error}`);\n    });\n    fetch(`${corsProxy}/https://skimap.org/SkiAreas/view/${resort.skimapID}.json`).then(response => response.json()).then(data => skiMapData.push(data)).catch(error => {\n      console.log(`Encountered error in SkiMap.org Fetch request: ${error}`);\n    });\n  }); // console.log(skiMapData);\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }, this), isBodyLoading, \" ? \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this), \" :\", /*#__PURE__*/_jsxDEV(Resorts, {\n      liftieData: resorts,\n      skimapData: skiMapData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"WGyDTvlVtSLJN4hR4+Np0O66lgg=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Paper","Header","Footer","Body","Resorts","App","isBodyLoading","setIsBodyLoading","useState","resorts","setResorts","query","skimapID","skiMapData","setSkiMapData","corsProxy","forEach","resort","index","fetch","then","response","json","data","catch","error","console","log","push"],"sources":["/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport { Paper } from '@mui/material';\n\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Body from './components/Body/Body';\nimport Resorts from './components/Resorts/Resorts';\n\nexport default function App() {\n   const [isBodyLoading, setIsBodyLoading] = React.useState(true);\n   const [resorts, setResorts] = React.useState([{ query: 'boreal', skimapID: '523' },\n   { query: 'chinapeak', skimapID: '527' },\n   { query: 'diamondpeak', skimapID: '359' },\n   { query: 'heavenly', skimapID: '537' },\n   { query: 'northstar', skimapID: '531' },\n   { query: 'kirkwood', skimapID: '544' },\n   { query: 'homewood', skimapID: '545' },\n   { query: 'june-mountain', skimapID: '540' },\n   { query: 'mammoth-lakes', skimapID: '530' },\n   { query: 'mtrose', skimapID: '358' },\n   { query: 'palisades', skimapID: '538' },\n   { query: 'alpine', skimapID: '522' },\n   { query: 'sierra', skimapID: '525' },\n   { query: 'sugarbowl', skimapID: '543' },\n   { query: 'tahoe-donner', skimapID: '529' },]);\n\n   const [skiMapData, setSkiMapData] = React.useState([]);\n\n   const corsProxy = 'https://mighty-scrubland-75189.herokuapp.com';\n\n   resorts.forEach((resort, index) => {\n      fetch(`${corsProxy}/https://liftie.info/api/resort/${resort.query}`)\n         .then(response => response.json())\n         .then(data => {\n            resorts[index] = { ...resorts[index], ...data };\n         })\n         .catch((error) => {\n            console.log(`Encountered error in Liftie Fetch request: ${error}`)\n         });\n\n      fetch(`${corsProxy}/https://skimap.org/SkiAreas/view/${resort.skimapID}.json`)\n         .then(response => response.json())\n         .then(data => skiMapData.push(data))\n         .catch((error) => {\n            console.log(`Encountered error in SkiMap.org Fetch request: ${error}`)\n         });\n   });\n   // console.log(skiMapData);\n\n   return (\n      <Paper>\n         <Header />\n         {isBodyLoading} ? <div>Loading...</div> :\n         <Resorts liftieData={resorts} skimapData={skiMapData} />\n         <Footer />\n      </Paper>\n   )\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}