{"ast":null,"code":"var _jsxFileName = \"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Paper } from '@mui/material';\nimport { Card, CardMedia, CardContent, CardActions, Button, Typography, Grid } from '@mui/material';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Body from './components/Body/Body';\nimport Resort from './components/Resort/Resort';\nimport { HeavenlyLogo } from './images';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isBodyLoading, setIsBodyLoading] = React.useState(true);\n  const resorts = [{\n    query: 'boreal',\n    skimapID: '523',\n    image: './images/boreal.png'\n  }, {\n    query: 'chinapeak',\n    skimapID: '527',\n    image: './images/chinapeak.png'\n  }, {\n    query: 'diamondpeak',\n    skimapID: '359',\n    image: './images/diamondpeak.png'\n  }, {\n    query: 'heavenly',\n    skimapID: '537',\n    image: HeavenlyLogo\n  }, {\n    query: 'northstar',\n    skimapID: '531',\n    image: './images/northstar.png'\n  }, {\n    query: 'kirkwood',\n    skimapID: '544',\n    image: './images/kirkwood.png'\n  }, {\n    query: 'homewood',\n    skimapID: '545',\n    image: './images/homewood.png'\n  }, {\n    query: 'june-mountain',\n    skimapID: '540',\n    image: './images/june.png'\n  }, {\n    query: 'mammoth-lakes',\n    skimapID: '530',\n    image: './images/mammoth.png'\n  }, {\n    query: 'mtrose',\n    skimapID: '358',\n    image: './images/mtrose.png'\n  }, {\n    query: 'palisades',\n    skimapID: '538',\n    image: './images/palisades.png'\n  }, {\n    query: 'alpine',\n    skimapID: '522',\n    image: './images/palisades.png'\n  }, {\n    query: 'sierra',\n    skimapID: '525',\n    image: './images/sierra.png'\n  }, {\n    query: 'sugarbowl',\n    skimapID: '543',\n    image: './images/sugarbowl.png'\n  }, {\n    query: 'tahoe-donner',\n    skimapID: '529',\n    image: './images/tahoedonner.png'\n  }];\n  const skiMapData = [];\n  const corsProxy = 'https://mighty-scrubland-75189.herokuapp.com'; // React.useEffect(() => {\n  //    resorts.forEach((resort, index) => {\n  //       fetch(`${corsProxy}/https://liftie.info/api/resort/${resort.query}`)\n  //          .then(response => response.json())\n  //          .then(data => {\n  //             // const removeProp = 'id';\n  //             // const { [removeProp]: remove, ...rest } = data;\n  //             resorts[index] = { ...resorts[index], ...data };\n  //          })\n  //          .catch((error) => {\n  //             console.log(`Encountered error in Liftie Fetch request: ${error}`)\n  //          });\n  //       // fetch(`${corsProxy}/https://skimap.org/SkiAreas/view/${resort.skimapID}.json`)\n  //       //    .then(response => response.json())\n  //       //    .then(data => {\n  //       //       skiMapData[index] = data;\n  //       //    })\n  //       //    .catch((error) => {\n  //       //       console.log(`Encountered error in SkiMap.org Fetch request: ${error}`)\n  //       //    });\n  //    });\n  //    setIsBodyLoading(previsBodyLoading => !previsBodyLoading);\n  // }, []);\n  // console.log(skiMapData);\n\n  const resortList = resorts.map(resort => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 345,\n          m: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: HeavenlyLogo,\n          alt: \"ski resort logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h4\",\n            component: \"div\",\n            children: resort.query\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: resort.skimapID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this);\n  });\n  const numbers = [1, 2, 3, 4, 5];\n  const listItems = numbers.map(number => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: number\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      my: 4,\n      children: resortList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"MsD0cE16p36KsAkkUdvsxAp9vuA=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Paper","Card","CardMedia","CardContent","CardActions","Button","Typography","Grid","Header","Footer","Body","Resort","HeavenlyLogo","App","isBodyLoading","setIsBodyLoading","useState","resorts","query","skimapID","image","skiMapData","corsProxy","resortList","map","resort","maxWidth","m","numbers","listItems","number"],"sources":["/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport { Paper } from '@mui/material';\nimport { Card, CardMedia, CardContent, CardActions, Button, Typography, Grid } from '@mui/material';\n\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Body from './components/Body/Body';\nimport Resort from './components/Resort/Resort';\nimport { HeavenlyLogo } from './images';\n\nexport default function App() {\n   const [isBodyLoading, setIsBodyLoading] = React.useState(true);\n   const resorts = [{ query: 'boreal', skimapID: '523', image: './images/boreal.png' },\n   { query: 'chinapeak', skimapID: '527', image: './images/chinapeak.png' },\n   { query: 'diamondpeak', skimapID: '359', image: './images/diamondpeak.png' },\n   { query: 'heavenly', skimapID: '537', image: HeavenlyLogo },\n   { query: 'northstar', skimapID: '531', image: './images/northstar.png' },\n   { query: 'kirkwood', skimapID: '544', image: './images/kirkwood.png' },\n   { query: 'homewood', skimapID: '545', image: './images/homewood.png' },\n   { query: 'june-mountain', skimapID: '540', image: './images/june.png' },\n   { query: 'mammoth-lakes', skimapID: '530', image: './images/mammoth.png' },\n   { query: 'mtrose', skimapID: '358', image: './images/mtrose.png' },\n   { query: 'palisades', skimapID: '538', image: './images/palisades.png' },\n   { query: 'alpine', skimapID: '522', image: './images/palisades.png' },\n   { query: 'sierra', skimapID: '525', image: './images/sierra.png' },\n   { query: 'sugarbowl', skimapID: '543', image: './images/sugarbowl.png' },\n   { query: 'tahoe-donner', skimapID: '529', image: './images/tahoedonner.png' },]\n\n   const skiMapData = [];\n\n   const corsProxy = 'https://mighty-scrubland-75189.herokuapp.com';\n\n   // React.useEffect(() => {\n   //    resorts.forEach((resort, index) => {\n   //       fetch(`${corsProxy}/https://liftie.info/api/resort/${resort.query}`)\n   //          .then(response => response.json())\n   //          .then(data => {\n   //             // const removeProp = 'id';\n   //             // const { [removeProp]: remove, ...rest } = data;\n   //             resorts[index] = { ...resorts[index], ...data };\n   //          })\n   //          .catch((error) => {\n   //             console.log(`Encountered error in Liftie Fetch request: ${error}`)\n   //          });\n\n   //       // fetch(`${corsProxy}/https://skimap.org/SkiAreas/view/${resort.skimapID}.json`)\n   //       //    .then(response => response.json())\n   //       //    .then(data => {\n   //       //       skiMapData[index] = data;\n   //       //    })\n   //       //    .catch((error) => {\n   //       //       console.log(`Encountered error in SkiMap.org Fetch request: ${error}`)\n   //       //    });\n   //    });\n   //    setIsBodyLoading(previsBodyLoading => !previsBodyLoading);\n   // }, []);\n   // console.log(skiMapData);\n   const resortList = resorts.map((resort) => {\n      return (\n         <Grid item xs={3}>\n            <Card sx={{ maxWidth: 345, m: 1 }}>\n               <CardMedia\n                  component='img'\n                  height='140'\n                  image={HeavenlyLogo}\n                  alt=\"ski resort logo\"\n               />\n               <CardContent>\n                  <Typography gutterBottom variant='h4' component='div'>\n                     {resort.query}\n                  </Typography>\n                  <Typography variant='body2' color='text.secondary'>\n                     {resort.skimapID}\n                  </Typography>\n               </CardContent>\n            </Card>\n         </Grid>\n      )\n   })\n   const numbers = [1, 2, 3, 4, 5];\n   const listItems = numbers.map((number) =>\n      <div>{number}</div>\n   );\n\n   return (\n      <Paper>\n         <Header />\n         {/* {isBodyLoading ? <div>Loading...</div> :\n            <Resorts liftieData={resorts} skimapData={skiMapData} />} */}\n         {/* <Resort resort={resorts[0]} /> */}\n         <Grid container my={4}>\n            {resortList}\n         </Grid>\n         <Footer />\n      </Paper>\n   )\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}