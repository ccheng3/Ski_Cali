{"ast":null,"code":"var _jsxFileName = \"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Paper } from '@mui/material';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Body from './components/Body/Body';\nimport Resort from './components/Resort/Resort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isBodyLoading, setIsBodyLoading] = React.useState(true);\n  const resorts = [{\n    query: 'boreal',\n    skimapID: '523'\n  }, {\n    query: 'chinapeak',\n    skimapID: '527'\n  }, {\n    query: 'diamondpeak',\n    skimapID: '359'\n  }, {\n    query: 'heavenly',\n    skimapID: '537'\n  }, {\n    query: 'northstar',\n    skimapID: '531'\n  }, {\n    query: 'kirkwood',\n    skimapID: '544'\n  }, {\n    query: 'homewood',\n    skimapID: '545'\n  }, {\n    query: 'june-mountain',\n    skimapID: '540'\n  }, {\n    query: 'mammoth-lakes',\n    skimapID: '530'\n  }, {\n    query: 'mtrose',\n    skimapID: '358'\n  }, {\n    query: 'palisades',\n    skimapID: '538'\n  }, {\n    query: 'alpine',\n    skimapID: '522'\n  }, {\n    query: 'sierra',\n    skimapID: '525'\n  }, {\n    query: 'sugarbowl',\n    skimapID: '543'\n  }, {\n    query: 'tahoe-donner',\n    skimapID: '529'\n  }];\n  const skiMapData = [];\n  const corsProxy = 'https://mighty-scrubland-75189.herokuapp.com'; // React.useEffect(() => {\n  //    resorts.forEach((resort, index) => {\n  //       fetch(`${corsProxy}/https://liftie.info/api/resort/${resort.query}`)\n  //          .then(response => response.json())\n  //          .then(data => {\n  //             // const removeProp = 'id';\n  //             // const { [removeProp]: remove, ...rest } = data;\n  //             resorts[index] = { ...resorts[index], ...data };\n  //          })\n  //          .catch((error) => {\n  //             console.log(`Encountered error in Liftie Fetch request: ${error}`)\n  //          });\n  //       // fetch(`${corsProxy}/https://skimap.org/SkiAreas/view/${resort.skimapID}.json`)\n  //       //    .then(response => response.json())\n  //       //    .then(data => {\n  //       //       skiMapData[index] = data;\n  //       //    })\n  //       //    .catch((error) => {\n  //       //       console.log(`Encountered error in SkiMap.org Fetch request: ${error}`)\n  //       //    });\n  //    });\n  //    setIsBodyLoading(previsBodyLoading => !previsBodyLoading);\n  // }, []);\n  // console.log(skiMapData);\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Resort, {\n      resort: resorts[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"MsD0cE16p36KsAkkUdvsxAp9vuA=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Paper","Header","Footer","Body","Resort","App","isBodyLoading","setIsBodyLoading","useState","resorts","query","skimapID","skiMapData","corsProxy"],"sources":["/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport { Paper } from '@mui/material';\n\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Body from './components/Body/Body';\nimport Resort from './components/Resort/Resort';\n\nexport default function App() {\n   const [isBodyLoading, setIsBodyLoading] = React.useState(true);\n   const resorts = [{ query: 'boreal', skimapID: '523' },\n   { query: 'chinapeak', skimapID: '527' },\n   { query: 'diamondpeak', skimapID: '359' },\n   { query: 'heavenly', skimapID: '537' },\n   { query: 'northstar', skimapID: '531' },\n   { query: 'kirkwood', skimapID: '544' },\n   { query: 'homewood', skimapID: '545' },\n   { query: 'june-mountain', skimapID: '540' },\n   { query: 'mammoth-lakes', skimapID: '530' },\n   { query: 'mtrose', skimapID: '358' },\n   { query: 'palisades', skimapID: '538' },\n   { query: 'alpine', skimapID: '522' },\n   { query: 'sierra', skimapID: '525' },\n   { query: 'sugarbowl', skimapID: '543' },\n   { query: 'tahoe-donner', skimapID: '529' },]\n\n   const skiMapData = [];\n\n   const corsProxy = 'https://mighty-scrubland-75189.herokuapp.com';\n\n   // React.useEffect(() => {\n   //    resorts.forEach((resort, index) => {\n   //       fetch(`${corsProxy}/https://liftie.info/api/resort/${resort.query}`)\n   //          .then(response => response.json())\n   //          .then(data => {\n   //             // const removeProp = 'id';\n   //             // const { [removeProp]: remove, ...rest } = data;\n   //             resorts[index] = { ...resorts[index], ...data };\n   //          })\n   //          .catch((error) => {\n   //             console.log(`Encountered error in Liftie Fetch request: ${error}`)\n   //          });\n\n   //       // fetch(`${corsProxy}/https://skimap.org/SkiAreas/view/${resort.skimapID}.json`)\n   //       //    .then(response => response.json())\n   //       //    .then(data => {\n   //       //       skiMapData[index] = data;\n   //       //    })\n   //       //    .catch((error) => {\n   //       //       console.log(`Encountered error in SkiMap.org Fetch request: ${error}`)\n   //       //    });\n   //    });\n   //    setIsBodyLoading(previsBodyLoading => !previsBodyLoading);\n   // }, []);\n   // console.log(skiMapData);\n\n   return (\n      <Paper>\n         <Header />\n         {/* {isBodyLoading ? <div>Loading...</div> :\n            <Resorts liftieData={resorts} skimapData={skiMapData} />} */}\n         <Resort resort={resorts[0]} />\n         <Footer />\n      </Paper>\n   )\n};"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC3B,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,KAAK,CAACS,QAAN,CAAe,IAAf,CAA1C;EACA,MAAMC,OAAO,GAAG,CAAC;IAAEC,KAAK,EAAE,QAAT;IAAmBC,QAAQ,EAAE;EAA7B,CAAD,EAChB;IAAED,KAAK,EAAE,WAAT;IAAsBC,QAAQ,EAAE;EAAhC,CADgB,EAEhB;IAAED,KAAK,EAAE,aAAT;IAAwBC,QAAQ,EAAE;EAAlC,CAFgB,EAGhB;IAAED,KAAK,EAAE,UAAT;IAAqBC,QAAQ,EAAE;EAA/B,CAHgB,EAIhB;IAAED,KAAK,EAAE,WAAT;IAAsBC,QAAQ,EAAE;EAAhC,CAJgB,EAKhB;IAAED,KAAK,EAAE,UAAT;IAAqBC,QAAQ,EAAE;EAA/B,CALgB,EAMhB;IAAED,KAAK,EAAE,UAAT;IAAqBC,QAAQ,EAAE;EAA/B,CANgB,EAOhB;IAAED,KAAK,EAAE,eAAT;IAA0BC,QAAQ,EAAE;EAApC,CAPgB,EAQhB;IAAED,KAAK,EAAE,eAAT;IAA0BC,QAAQ,EAAE;EAApC,CARgB,EAShB;IAAED,KAAK,EAAE,QAAT;IAAmBC,QAAQ,EAAE;EAA7B,CATgB,EAUhB;IAAED,KAAK,EAAE,WAAT;IAAsBC,QAAQ,EAAE;EAAhC,CAVgB,EAWhB;IAAED,KAAK,EAAE,QAAT;IAAmBC,QAAQ,EAAE;EAA7B,CAXgB,EAYhB;IAAED,KAAK,EAAE,QAAT;IAAmBC,QAAQ,EAAE;EAA7B,CAZgB,EAahB;IAAED,KAAK,EAAE,WAAT;IAAsBC,QAAQ,EAAE;EAAhC,CAbgB,EAchB;IAAED,KAAK,EAAE,cAAT;IAAyBC,QAAQ,EAAE;EAAnC,CAdgB,CAAhB;EAgBA,MAAMC,UAAU,GAAG,EAAnB;EAEA,MAAMC,SAAS,GAAG,8CAAlB,CApB2B,CAsB3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACG,QAAC,KAAD;IAAA,wBACG,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADH,eAIG,QAAC,MAAD;MAAQ,MAAM,EAAEJ,OAAO,CAAC,CAAD;IAAvB;MAAA;MAAA;MAAA;IAAA,QAJH,eAKG,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QALH;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AASF;;GAzDuBJ,G;;KAAAA,G;AAyDvB"},"metadata":{},"sourceType":"module"}