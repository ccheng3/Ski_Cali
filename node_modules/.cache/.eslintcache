[{"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/index.js":"1","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/App.jsx":"2","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Header/Header.jsx":"3","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Footer/Footer.jsx":"4","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Resort/Resort.jsx":"5","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/images/index.js":"6","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/About/About.jsx":"7","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Resorts/Resorts.jsx":"8","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Traffic/Traffic.jsx":"9","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/HomeBody/HomeBody.jsx":"10","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/index.js":"11","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/TrafficMap/TrafficMap.jsx":"12","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/NotFoundPage/NotFoundPage.jsx":"13","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/ResortDetail/ResortDetail.jsx":"14","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/WeatherReport/WeatherReport.jsx":"15","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/LiftStatus/LiftStatus.jsx":"16","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/DataNotPresent/DataNotPresent.jsx":"17","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Webcams/Webcams.jsx":"18","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/TweetPanel/TweetPanel.jsx":"19","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Tweet/Tweet.jsx":"20"},{"size":269,"mtime":1656870513578,"results":"21","hashOfConfig":"22"},{"size":3332,"mtime":1657492559141,"results":"23","hashOfConfig":"22"},{"size":1149,"mtime":1656971337083,"results":"24","hashOfConfig":"22"},{"size":312,"mtime":1656867693683,"results":"25","hashOfConfig":"22"},{"size":2124,"mtime":1657806366903,"results":"26","hashOfConfig":"22"},{"size":931,"mtime":1657808228617,"results":"27","hashOfConfig":"22"},{"size":4090,"mtime":1657458374394,"results":"28","hashOfConfig":"22"},{"size":2123,"mtime":1657492422272,"results":"29","hashOfConfig":"22"},{"size":3883,"mtime":1657497933441,"results":"30","hashOfConfig":"22"},{"size":138,"mtime":1656969160312,"results":"31","hashOfConfig":"22"},{"size":451,"mtime":1657490828817,"results":"32","hashOfConfig":"22"},{"size":1122,"mtime":1657552183503,"results":"33","hashOfConfig":"22"},{"size":881,"mtime":1657636842987,"results":"34","hashOfConfig":"22"},{"size":2739,"mtime":1657852649884,"results":"35","hashOfConfig":"22"},{"size":1846,"mtime":1657552356127,"results":"36","hashOfConfig":"22"},{"size":3659,"mtime":1657719623614,"results":"37","hashOfConfig":"22"},{"size":506,"mtime":1657565002357,"results":"38","hashOfConfig":"22"},{"size":1070,"mtime":1657635228997,"results":"39","hashOfConfig":"22"},{"size":2086,"mtime":1657857148929,"results":"40","hashOfConfig":"22"},{"size":2002,"mtime":1657857017562,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1wi5iou",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/index.js",[],[],[],"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/App.jsx",["114","115"],[],"import React from 'react';\nimport { Paper } from '@mui/material';\nimport { Routes, Route } from 'react-router-dom';\n\nimport './App.css';\nimport {\n   Header,\n   Footer,\n   About,\n   Resort,\n   Resorts,\n   Traffic,\n   HomeBody,\n   NotFoundPage,\n} from './components';\n\nimport {\n   HeavenlyLogo,\n   BorealLogo,\n   ChinaPeakLogo,\n   DiamondPeakLogo,\n   HomewoodLogo,\n   JuneLogo,\n   KirkwoodLogo,\n   MammothLogo,\n   MtRoseLogo,\n   NorthstarLogo,\n   PalisadesLogo,\n   SierraLogo,\n   SugarBowlLogo,\n   TahoeDonnerLogo\n} from './images';\n\n\nexport default function App() {\n   const [isBodyLoading, setIsBodyLoading] = React.useState(true);\n   const resorts = [{ query: 'boreal', skimapID: '523', image: BorealLogo },\n   { query: 'chinapeak', skimapID: '527', image: ChinaPeakLogo },\n   { query: 'diamondpeak', skimapID: '359', image: DiamondPeakLogo },\n   { query: 'heavenly', skimapID: '537', image: HeavenlyLogo },\n   { query: 'northstar', skimapID: '531', image: NorthstarLogo },\n   { query: 'kirkwood', skimapID: '544', image: KirkwoodLogo },\n   { query: 'homewood', skimapID: '545', image: HomewoodLogo },\n   { query: 'june-mountain', skimapID: '540', image: JuneLogo },\n   { query: 'mammoth-lakes', skimapID: '530', image: MammothLogo },\n   { query: 'mtrose', skimapID: '358', image: MtRoseLogo },\n   { query: 'palisades', skimapID: '538', image: PalisadesLogo },\n   { query: 'alpine', skimapID: '522', image: PalisadesLogo },\n   { query: 'sierra', skimapID: '525', image: SierraLogo },\n   { query: 'sugarbowl', skimapID: '543', image: SugarBowlLogo },\n   { query: 'tahoe-donner', skimapID: '529', image: TahoeDonnerLogo },]\n\n   // React.useEffect(() => {\n   //    resorts.forEach((resort, index) => {\n   //       fetch(`${corsProxy}/https://liftie.info/api/resort/${resort.query}`)\n   //          .then(response => response.json())\n   //          .then(data => {\n   //             // const removeProp = 'id';\n   //             // const { [removeProp]: remove, ...rest } = data;\n   //             resorts[index] = { ...resorts[index], ...data };\n   //          })\n   //          .catch((error) => {\n   //             console.log(`Encountered error in Liftie Fetch request: ${error}`)\n   //          });\n\n   //       // fetch(`${corsProxy}/https://skimap.org/SkiAreas/view/${resort.skimapID}.json`)\n   //       //    .then(response => response.json())\n   //       //    .then(data => {\n   //       //       skiMapData[index] = data;\n   //       //    })\n   //       //    .catch((error) => {\n   //       //       console.log(`Encountered error in SkiMap.org Fetch request: ${error}`)\n   //       //    });\n   //    });\n   //    setIsBodyLoading(previsBodyLoading => !previsBodyLoading);\n   // }, []);\n   // console.log(skiMapData);\n\n   return (\n      <Paper>\n         <Header />\n         <Routes>\n            <Route path='/' element={<HomeBody />} />\n            <Route path='/about' element={<About />} />\n            <Route path='/resorts'\n               element={<Resorts resorts={resorts} />} />\n            <Route path='/resorts/:resortQuery' element={<Resort resorts={resorts} />} />\n            <Route path='/traffic' element={<Traffic />} />\n            {/* Wild card path leads to a 404 not found page. */}\n            <Route path='*' element={<NotFoundPage />} />\n         </Routes>\n         <Footer />\n      </Paper>\n   )\n};","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Header/Header.jsx",["116","117","118"],[],"import React from 'react';\nimport { Toolbar, Typography } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\n\nimport logo from '../../images/skiing.png';\nimport './Header.css'\n\nexport default function Header() {\n   let activeStyle = {\n      textDecoration: 'underline',\n   };\n\n   const handleLinkStyle = ({ isActive }) => {\n      return {\n         textDecoration: isActive ? 'none' : 'underline',\n         fontWeight: isActive ? 'bold' : 'normal',\n      }\n   }\n\n   return (\n      <Toolbar className='main-nav'>\n         <span>\n            <NavLink className='main-navlink' to='/'>\n               <img className='logo'\n                  src={logo}\n               />\n            </NavLink>\n            <span className='title'>Ski California</span>\n         </span>\n         <span>\n            <NavLink style={handleLinkStyle} className='main-navlink' to='/about'>About</NavLink>\n            <NavLink style={handleLinkStyle} className='main-navlink' to='/resorts'>Resorts</NavLink>\n            <NavLink style={handleLinkStyle} className='main-navlink' to='/traffic'>Highway Conditions</NavLink>\n         </span>\n      </Toolbar >\n   );\n}","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Footer/Footer.jsx",[],[],"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Resort/Resort.jsx",["119"],[],"import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { CircularProgress, Container } from '@mui/material';\n\nimport ResortDetail from '../ResortDetail/ResortDetail';\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\n\nexport default function Resort(props) {\n   const [isDataLoaded, setIsDataLoaded] = React.useState(false);\n   const [isValidResortName, setIsValidResortName] = React.useState(true);\n   const { resortQuery } = useParams();\n   let skimapID = '';\n\n   let [resortData, setResortData] = React.useState({});\n   const corsProxy = 'https://mighty-scrubland-75189.herokuapp.com';\n\n   React.useEffect(() => {\n      //  error check for a valid resort query name first\n      // don't call fetch() on an invalid resortQuery\n      const validResort = props.resorts.find(resort => resort.query === resortQuery);\n      if (validResort === undefined) {\n         setIsValidResortName(false);\n         return;\n      }\n\n      skimapID = props.resorts.find(resort => resort.query === resortQuery).skimapID;\n      fetch(`${corsProxy}/https://liftie.info/api/resort/${resortQuery}`)\n         .then(response => response.json())\n         .then(data => {\n            setResortData(data);\n            setTimeout(() => setIsDataLoaded(true), 1000);\n         })\n         .catch((error) => {\n            console.log(`Encountered error in Liftie Fetch request: ${error}`)\n         });\n   }, [resortQuery])\n\n   // only display the resort content AFTER the fetch call has returned!\n   // Otherwise, display the 404 page if invalid resort name was used.\n   let displayContent;\n   if (isValidResortName && !isDataLoaded) {\n      displayContent = <Container style={{\n         display: 'flex',\n         justifyContent: 'center',\n         alignItems: 'center',\n         padding: '4.8rem'\n      }}>\n         <CircularProgress color='inherit' />\n      </Container>\n   }\n   if (!isValidResortName) {\n      displayContent = <NotFoundPage />;\n   }\n   if (isDataLoaded) {\n      displayContent = <ResortDetail resortData={resortData}\n         skimapID={skimapID}\n      />;\n   }\n\n   return (\n      displayContent\n   );\n}","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/images/index.js",[],[],"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/About/About.jsx",[],[],"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Resorts/Resorts.jsx",["120","121","122"],[],"import React from 'react';\n\nimport {\n   Card, CardMedia, CardContent,\n   Typography, Grid\n} from '@mui/material';\n\nimport { Link } from 'react-router-dom';\n\nexport default function Resorts(props) {\n   const [clickedResort, setClickedResort] = React.useState({});\n   const [isOpen, setIsOpen] = React.useState(false);\n   const handleClose = () => {\n      setIsOpen(false);\n   };\n   const handleToggle = () => {\n      setIsOpen(prevSetOpen => !prevSetOpen);\n   };\n\n   const resortList = props.resorts.map((resort) => {\n      return (\n         // the Grid's responsive layout breakpoints rely on a \n         // 12 column layout. \n         // If XS condition, then each element in grid takes entire 12 cols (1 col layout total)\n         // If SM condition, then each element in grid takes 6 cols (2 col layout total)\n         // If MD condition or above, then each element in grid takes 3 cols (4 col layout total)\n         <Grid key={resort.skimapID} item\n            xs={12} sm={6} md={3}>\n            <Link to={resort.query}>\n               <Card sx={{\n                  maxWidth: 345,\n                  m: 1,\n                  \"&:hover\": {\n                     boxShadow: 20,\n                  },\n                  cursor: 'pointer',\n               }}\n                  onClick={() => {\n                     handleToggle();\n                     setClickedResort(resort);\n                  }}>\n                  <CardMedia\n                     component='img'\n                     height='140'\n                     image={resort.image}\n                     alt=\"ski resort logo\"\n                  />\n                  <CardContent>\n                     <Typography gutterBottom variant='h4' component='div'>\n                        {resort.query}\n                     </Typography>\n                     <Typography variant='body2' color='text.secondary'>\n                        {resort.skimapID}\n                     </Typography>\n                  </CardContent>\n               </Card>\n            </Link>\n         </Grid>\n      )\n   })\n   return (\n      <Grid container my={4}>\n         {resortList}\n      </Grid>\n   )\n};","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Traffic/Traffic.jsx",["123"],[],"import React from 'react';\nimport { Box, Paper, Button, Skeleton } from '@mui/material';\nimport { nanoid } from 'nanoid';\n\n\nimport TrafficMap from '../TrafficMap/TrafficMap';\n\nexport default function Traffic() {\n   const destinations = ['Truckee,CA', 'SouthLakeTahoe,CA', 'MammothMountain,CA'];\n   const mapMessages = [\n      `I am using Truckee, CA as a proxy for the North Tahoe ski resorts.`,\n      `South Lake Tahoe, CA is used as the proxy for the South Tahoe ski resorts.\n      Note that you will need to take Highway 88 to get to Kirkwood.`,\n      `Mammoth is the premiere resort for SoCal skiers and riders! It's not as economical for \n      SF Bay Area friends because the mountain passes are closed during the winter and you would\n      have to drive up to Tahoe and then back down the Sierra Nevada backside, whereas it's\n      a straight-shot North through the Mojave Desert from SoCal through to Mammoth.`,\n   ]\n   const [hasReceivedUserLocation, setHasReceivedUserLocation] = React.useState(false);\n   const [userLocation, setUserLocation] = React.useState({\n      lat: 0,\n      long: 0,\n   });\n\n   const divStyling = {\n      marginBottom: '1.2rem',\n   };\n\n   const buttonStyling = {\n      color: '#ed6c02'\n   };\n\n   const trafficMapStyle = {\n      marginTop: '2.2rem',\n      textDecoration: 'underline',\n      fontSize: '1.2rem',\n   };\n\n\n   // use React DevTool to verify the state!\n   React.useEffect(() => {\n      function success(pos) {\n         const crd = pos.coords;\n         setUserLocation({\n            lat: crd.latitude,\n            long: crd.longitude,\n         });\n         setHasReceivedUserLocation(true);\n      }\n\n      function error(err) {\n         console.warn(`ERROR(${err.code}): ${err.message}`);\n      }\n      navigator.geolocation.getCurrentPosition(success, error);\n   }, []);\n\n   const displayMaps = destinations.map((destination, index) => {\n      return <TrafficMap destination={destination}\n         mapMode={'directions'}\n         mapDescription={mapMessages[index]}\n         lat={userLocation.lat}\n         long={userLocation.long}\n         key={nanoid()}>\n      </TrafficMap>\n   });\n\n   return (\n      <Box sx={{\n         margin: 4,\n         display: 'flex',\n         justifyContent: 'center',\n      }}>\n         <Paper sx={{\n            padding: 4,\n            boxShadow: 10,\n            backgroundColor: '#fff',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n         }}>\n            <div style={divStyling}>\n               Please see Chad Smith's excellent Tahoe road conditions website here: <Button sx={{ color: '#ed6c02', backgroundColor: '#2d4850', }} variant=\"contained\" href=\"https://tahoeroads.info/\" target='_blank' rel='noopener noreferrer'>\n                  Check road conditions\n               </Button></div>\n            <ul> <h3>Three main roads into Tahoe from SF Bay Area:</h3>\n               <li>Highway 88 --> Goes to Kirkwood </li>\n               <li>Highway 50 --> Goes to Sierra at Tahoe and Heavenly </li>\n               <li>Highway 80 --> Goes to north shore Tahoe resorts (Sugar Bowl, Northstar, Palisades, Boreal)</li>\n            </ul>\n\n            <div style={trafficMapStyle}>Please allow JavaScript to get your current location so that\n               Google Maps can show you the fastest way to get to the different ski areas!</div>\n            {/* Secured API key to only work with Google Maps Embed API and need to hide it.\n            https://betterprogramming.pub/how-to-hide-your-api-keys-c2b952bc07e6*/}\n            {/* Did not have a unique id for React to use as 'key' prop so I called on \n            nanoid() for help. */}\n            {hasReceivedUserLocation ? displayMaps :\n               <Skeleton variant=\"rectangular\" width={600} height={450} />\n            }\n         </Paper>\n      </Box >\n   )\n};","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/HomeBody/HomeBody.jsx",[],[],"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/index.js",[],[],"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/TrafficMap/TrafficMap.jsx",["124"],[],"import React from 'react';\n\nexport default function TrafficMap(props) {\n   const iframeStyle = {\n      marginTop: '0.5rem',\n      // removing the border per the doc's example - i thought the border \n      // was too distracting\n      border: 0,\n      borderRadius: '20px',\n   }\n\n   let sourceString = props.mapMode === 'directions' ? `https://www.google.com/maps/embed/v1/directions?key=${process.env.REACT_APP_GOOGLE_MAPS_EMBED_API_KEY}\n   &origin=${props.lat},${props.long}&destination=${props.destination}` :\n      `https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_GOOGLE_MAPS_EMBED_API_KEY}\n      &q=${props.resortName}+Ski+Resort&zoom=10&center=${props.lat},${props.long}`\n\n   return (\n      <>\n         <div style={{\n            marginTop: '2.6rem',\n            lineHeight: '1.8rem',\n         }}>{props.mapDescription}</div>\n         <iframe\n            style={iframeStyle}\n            width=\"600\"\n            height=\"450\"\n            loading='lazy'\n            allow=\"fullscreen\"\n            referrerPolicy=\"no-referrer-when-downgrade\"\n            src={sourceString}></iframe>\n      </>\n   )\n}","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/NotFoundPage/NotFoundPage.jsx",["125"],[],"import React from 'react';\n\nexport default function NotFoundPage() {\n   return (\n      <div style={{\n         fontSize: '1.8rem',\n         display: 'flex',\n         justifyContent: 'center',\n         alignItems: 'center',\n         flexDirection: 'column',\n         margin: '6rem',\n      }}>\n         <div style={{\n            padding: '3.6rem',\n         }}>Oops! We couldn't find what you were looking for. (404 error)</div>\n         <iframe\n            style={{\n               borderRadius: '10px',\n            }}\n            src=\"https://giphy.com/embed/elyFU4qFMAULiW5SNH\"\n            width=\"220\" height=\"220\" frameBorder=\"0\" className=\"giphy-embed\"\n            allowFullScreen></iframe>\n         <p style={{\n            fontSize: '1.2rem',\n            fontStyle: 'italic',\n         }}>French fry when you shoulda pizza? You're gunna have a bad time! :)</p>\n      </div>\n   );\n}","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/ResortDetail/ResortDetail.jsx",["126"],[],"import React from 'react';\n\nimport { Grid, Paper } from '@mui/material';\n\nimport TrafficMap from '../TrafficMap/TrafficMap';\nimport WeatherReport from '../WeatherReport/WeatherReport';\nimport LiftStatus from '../LiftStatus/LiftStatus';\nimport DataNotPresent from '../DataNotPresent/DataNotPresent';\nimport Webcams from '../Webcams/Webcams';\nimport TweetPanel from '../TweetPanel/TweetPanel';\n\nimport WindyLogo from '../../images/windy-logo.png';\n\nexport default function ResortDetail(props) {\n   const resort = props.resortData;\n\n   return (\n      <>\n         <Paper style={{\n            padding: '1.2rem',\n            margin: '1.2rem 1.8rem'\n         }}>\n            <Grid container spacing={2} style={{\n               padding: '2.4rem',\n               display: 'flex',\n               justifyContent: 'center',\n            }}>\n               <Grid item xs={12} style={{\n                  maxWidth: '800px'\n               }}>\n                  {/* Not all resorts have weather data to use. Ask user to check a \n         nearby resort for more info. */}\n                  {!resort.weather ? <DataNotPresent dataName='Weather' /> :\n                     <WeatherReport resort={resort} />}\n               </Grid>\n               <Grid item xs={12} style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n               }}>\n                  <TrafficMap resortName={resort.name}\n                     mapMode={'place'}\n                     lat={resort.ll[1]}\n                     long={resort.ll[0]} />\n               </Grid>\n               <Grid item xs={12} style={{\n                  paddingLeft: '9.6rem',\n                  paddingRight: '9.6rem',\n                  maxWidth: '800px'\n               }}>\n                  <LiftStatus status={resort.lifts.status} />\n               </Grid>\n               <Grid item xs={12} style={{\n                  maxWidth: '800px'\n               }}>\n                  <TweetPanel resort={resort} />\n               </Grid>\n            </Grid>\n         </Paper>\n         {!resort.webcams ? <DataNotPresent dataName='Web Cam' /> :\n            <>\n               <div style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n               }}>\n                  <h3 style={{ textAlign: 'center' }}>Web Cams - check out recent conditions!\n                     <img src={WindyLogo} style={{\n                        width: '70px',\n                        height: '18px',\n                        marginLeft: '10px',\n                     }} /></h3>\n               </div>\n               <Grid container spacing={1}>\n                  <Webcams webcams={resort.webcams} />\n               </Grid></>}\n      </>\n   );\n}","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/WeatherReport/WeatherReport.jsx",[],[],"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/LiftStatus/LiftStatus.jsx",[],[],"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/DataNotPresent/DataNotPresent.jsx",[],[],"/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Webcams/Webcams.jsx",["127","128","129"],[],"import React from 'react';\n\nimport {\n   Paper, Card,\n   CardMedia, CardContent, Grid,\n   CardActions, Button, Typography\n} from '@mui/material';\n\nimport WindyLogo from '../../images/windy-logo.png';\n\nexport default function Webcams(props) {\n   return (props.webcams.map(cam => {\n      return (\n         <Grid item xs={12} sm={6} md={4}\n            style={{ display: 'flex' }}\n            key={cam.image}>\n            <Card sx={{\n               maxWidth: 400,\n               margin: '0.8rem',\n            }}>\n               <CardMedia component='img'\n                  image={cam.image}\n                  alt='resort traffic webcam'>\n               </CardMedia>\n               <CardContent>\n                  {cam.name}\n               </CardContent>\n               <CardActions>\n                  <Button variant=\"outlined\"\n                     size='small'\n                     target=\"_blank\" href={cam.source}>\n                     {`View Time Lapse`}\n                  </Button>\n               </CardActions>\n            </Card>\n         </Grid>\n      )\n   })\n   );\n}","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/TweetPanel/TweetPanel.jsx",["130"],[],"import React from 'react';\n\nimport Tweet from '../Tweet/Tweet';\nimport { Container } from '@mui/material';\n\nexport default function TweetPanel(props) {\n   const tweets = props.resort.twitter.tweets.map(tweet => {\n      const tweetDateStringArray = tweet.created_at.split(' ');\n\n      // parse logic for Tweet published hour\n      let tweetDateFormatTime = tweetDateStringArray[3].slice(0, 5);\n      const tweetDateHour = parseInt(tweetDateFormatTime.slice(0, 2));\n      tweetDateFormatTime = tweetDateHour > 12 ?\n         (tweetDateHour - 12).toString() + tweetDateFormatTime.slice(2) + ' PM' :\n         tweetDateHour + ' AM';\n      const tweetDateClean = `${tweetDateStringArray[0]} ${tweetDateFormatTime} - ${tweetDateStringArray[1]} ${tweetDateStringArray[2]}, ${tweetDateStringArray[5]}`;\n\n      // grab and render the tweet's image if present, otherwise render nothing.\n      const tweetMediaObject = tweet.entities.media;\n      const tweetMediaFile = tweetMediaObject === undefined ? null :\n         <Container style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: '1.2rem',\n         }}>\n            <img width='350px' height='auto' src={tweetMediaObject[0].media_url_https} />\n         </Container>\n\n      const cleanTweetText = tweet.text.includes('https') ? tweet.text.substring(0, tweet.text.search('https')) :\n         tweet.text;\n      const tweetTextURL = tweet.text\n         .substring(tweet.text.search('https'), tweet.text.search('https') + tweet.text.substring(tweet.text.search('https'))\n            .search(' '))\n         .replace(/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g, '');\n\n      console.log(tweetTextURL);\n      return (\n         <Tweet tweetDateClean={tweetDateClean}\n            tweetMediaFile={tweetMediaFile}\n            resort={props.resort}\n            tweetText={cleanTweetText}\n            tweetTextURL={tweetTextURL}\n            key={tweet.id_str}\n         />\n      );\n   })\n\n   return tweets;\n}","/home/chris/Documents/Web_Dev_Workshop/Ski-California/liftie-resorts/src/components/Tweet/Tweet.jsx",["131"],[],"import React from 'react';\n\nimport { Typography, Paper, Stack, Container, Button } from '@mui/material';\nimport { TwitterLogo } from '../../images';\n\nexport default function Tweet(props) {\n\n   return (\n      <Paper style={{\n         padding: '1.2rem',\n         marginBottom: '1.2rem',\n      }}>\n         <Stack>\n            <Typography style={{\n               fontWeight: 'bold',\n            }}>\n               {/* 'Mammoth Mountain Mountain Resort' \n            sounds really bad so just catch that */}\n               {props.resort.name.includes('Mountain') ? `${props.resort.name} Resort` :\n                  `${props.resort.name} Mountain Resort`}\n            </Typography>\n            <Typography style={{\n               display: 'flex',\n               alignItems: 'center',\n            }}>\n               <img src={TwitterLogo} width='25px' height='25px' style={{ marginRight: '5px' }} />\n               {`@${props.resort.twitter.user}`}\n            </Typography>\n\n            <Container style={{\n               marginTop: '1.2rem',\n               lineHeight: '1.6rem',\n               display: 'flex',\n               flexDirection: 'column',\n               justifyContent: 'center',\n               alignItems: 'center',\n            }}>\n               {props.tweetText}\n               {props.tweetMediaFile}\n               {props.tweetTextURL === '' || !props.tweetTextURL.includes('https') ? null :\n                  <Button sx={{\n                     color: '#ed6c02',\n                     backgroundColor: '#2d4850',\n                     marginTop: '1.2rem',\n                     maxWidth: '250px',\n                  }} variant=\"contained\" href={props.tweetTextURL} target='_blank' rel='noopener noreferrer'>\n                     Extra Info found here:\n                  </Button>}\n            </Container>\n            <Typography style={{\n               marginTop: '1.2rem'\n            }}>\n               {props.tweetDateClean}\n            </Typography>\n         </Stack>\n      </Paper>\n   );\n}",{"ruleId":"132","severity":1,"message":"133","line":36,"column":11,"nodeType":"134","messageId":"135","endLine":36,"endColumn":24},{"ruleId":"132","severity":1,"message":"136","line":36,"column":26,"nodeType":"134","messageId":"135","endLine":36,"endColumn":42},{"ruleId":"132","severity":1,"message":"137","line":2,"column":19,"nodeType":"134","messageId":"135","endLine":2,"endColumn":29},{"ruleId":"132","severity":1,"message":"138","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":24,"column":16,"nodeType":"141","endLine":26,"endColumn":18},{"ruleId":"142","severity":1,"message":"143","line":27,"column":18,"nodeType":"144","endLine":27,"endColumn":85},{"ruleId":"132","severity":1,"message":"145","line":11,"column":11,"nodeType":"134","messageId":"135","endLine":11,"endColumn":24},{"ruleId":"132","severity":1,"message":"146","line":12,"column":11,"nodeType":"134","messageId":"135","endLine":12,"endColumn":17},{"ruleId":"132","severity":1,"message":"147","line":13,"column":10,"nodeType":"134","messageId":"135","endLine":13,"endColumn":21},{"ruleId":"132","severity":1,"message":"148","line":29,"column":10,"nodeType":"134","messageId":"135","endLine":29,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":23,"column":10,"nodeType":"141","endLine":30,"endColumn":32},{"ruleId":"149","severity":1,"message":"150","line":16,"column":10,"nodeType":"141","endLine":22,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":67,"column":22,"nodeType":"141","endLine":71,"endColumn":27},{"ruleId":"132","severity":1,"message":"151","line":4,"column":4,"nodeType":"134","messageId":"135","endLine":4,"endColumn":9},{"ruleId":"132","severity":1,"message":"137","line":6,"column":25,"nodeType":"134","messageId":"135","endLine":6,"endColumn":35},{"ruleId":"132","severity":1,"message":"152","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":27,"column":13,"nodeType":"141","endLine":27,"endColumn":90},{"ruleId":"139","severity":1,"message":"140","line":26,"column":16,"nodeType":"141","endLine":26,"endColumn":99},"no-unused-vars","'isBodyLoading' is assigned a value but never used.","Identifier","unusedVar","'setIsBodyLoading' is assigned a value but never used.","'Typography' is defined but never used.","'activeStyle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Assignments to the 'skimapID' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","MemberExpression","'clickedResort' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'buttonStyling' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Paper' is defined but never used.","'WindyLogo' is defined but never used."]